services:
  # Infrastructure Services
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: dating_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dating_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"     # RabbitMQ broker
      - "15672:15672"   # Management UI
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  gateway:
    build: ./gateway/Gateway.API
    container_name: dating_gateway
    ports:
      - "5000:80"
    depends_on:
      auth:
        condition: service_healthy
      users:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    networks:
      - appnet
    restart: unless-stopped

  # Core Services
  auth:
    build:
      context: .
      dockerfile: ./services/AuthService/AuthService.API/Dockerfile
    container_name: dating_auth
    ports:
      - "5001:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_AUTH_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
    networks:
      - appnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  users:
    build:
      context: .
      dockerfile: ./services/UserService/UserService.API/Dockerfile
    container_name: dating_users
    ports:
      - "5002:80"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DATING_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    networks:
      - appnet

  match:
    build:
      context: .
      dockerfile: ./services/MatchService/MatchService.API/Dockerfile
    container_name: dating_match
    ports:
      - "5003:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_MATCH_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMQ__Pass=${RABBITMQ_DEFAULT_PASS}
    networks:
      - appnet
  notify:
    build:
      context: .
      dockerfile: ./services/NotificationService/NotificationService.API/Dockerfile
    container_name: dating_notification
    ports:
      - "5004:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=notification_db;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMQ__Pass=${RABBITMQ_DEFAULT_PASS}
    networks:
      - appnet
  messaging:
    build:
      context: .
      dockerfile: ./services/MessagingService/MessagingService.API/Dockerfile
    container_name: dating_messaging
    ports:
      - "5005:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=messaging_db;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMQ__Pass=${RABBITMQ_DEFAULT_PASS}
    networks:
      - appnet
  ai-insights-service:
    build:
      context: .
      dockerfile: ./services/AiInsightsService/AiInsightsService.API/Dockerfile
    container_name: dating_ai_insights
    ports:
      - "5006:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_AI_INSIGHTS_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMQ__Pass=${RABBITMQ_DEFAULT_PASS}
    networks:
      - appnet
  purchase-service:
    build:
      context: .
      dockerfile: ./services/PurchaseService/PurchaseService.API/Dockerfile
    container_name: dating_purchase
    ports:
      - "5007:8080"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_PURCHASE_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    networks:
      - appnet
  moderation-service:
    build:
      context: .
      dockerfile: ./services/ModerationService/ModerationService.API/Dockerfile
    container_name: dating_moderation
    ports:
      - "5008:8080"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_MODERATION_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    networks:
      - appnet

volumes:
  postgres_data:

networks:
  appnet:
    driver: bridge
