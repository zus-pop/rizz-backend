// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseService.Infrastructure.Persistence;

#nullable disable

namespace PurchaseService.Infrastructure.Migrations
{
    [DbContext(typeof(PurchaseDbContext))]
    partial class PurchaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseService.Domain.Entities.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_Purchase_ProductId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Purchase_UserId");

                    b.HasIndex("UserId", "ProductId")
                        .HasDatabaseName("IX_Purchase_UserId_ProductId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("PurchaseService.Domain.Entities.PurchaseStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChangedAt")
                        .HasDatabaseName("IX_PurchaseStatusHistory_ChangedAt");

                    b.HasIndex("PurchaseId")
                        .HasDatabaseName("IX_PurchaseStatusHistory_PurchaseId");

                    b.ToTable("PurchaseStatusHistories");
                });

            modelBuilder.Entity("PurchaseService.Domain.Entities.Purchase", b =>
                {
                    b.OwnsOne("PurchaseService.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Amount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("Currency");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("Purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.OwnsOne("PurchaseService.Domain.ValueObjects.PurchaseStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Reason")
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("StatusReason");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Status");

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("datetime2")
                                .HasColumnName("StatusTimestamp");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("Purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.OwnsOne("PurchaseService.Domain.Entities.Refund", "Refund", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("RefundCreatedAt");

                            b1.Property<string>("ExternalRefundId")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("RefundExternalId");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("ProcessedAt")
                                .HasColumnType("datetime2")
                                .HasColumnName("RefundProcessedAt");

                            b1.Property<string>("Reason")
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("RefundReason");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("RefundStatus");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("Purchases");

                            b1.WithOwner("Purchase")
                                .HasForeignKey("PurchaseId");

                            b1.OwnsOne("PurchaseService.Domain.ValueObjects.Money", "Amount", b2 =>
                                {
                                    b2.Property<Guid>("RefundPurchaseId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Amount")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("RefundAmount");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)")
                                        .HasColumnName("RefundCurrency");

                                    b2.HasKey("RefundPurchaseId");

                                    b2.ToTable("Purchases");

                                    b2.WithOwner()
                                        .HasForeignKey("RefundPurchaseId");
                                });

                            b1.Navigation("Amount")
                                .IsRequired();

                            b1.Navigation("Purchase");
                        });

                    b.OwnsOne("PurchaseService.Domain.ValueObjects.PaymentMethod", "PaymentMethod", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ExternalTransactionId")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ExternalTransactionId");

                            b1.Property<string>("Metadata")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PaymentMetadata");

                            b1.Property<string>("Provider")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("PaymentProvider");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PaymentMethodType");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("Purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.OwnsOne("PurchaseService.Domain.ValueObjects.SubscriptionPeriod", "SubscriptionPeriod", b1 =>
                        {
                            b1.Property<Guid>("PurchaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Duration")
                                .HasColumnType("int")
                                .HasColumnName("SubscriptionDuration");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("SubscriptionEndDate");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("SubscriptionStartDate");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("SubscriptionType");

                            b1.HasKey("PurchaseId");

                            b1.ToTable("Purchases");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("PaymentMethod")
                        .IsRequired();

                    b.Navigation("Refund");

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("SubscriptionPeriod");
                });

            modelBuilder.Entity("PurchaseService.Domain.Entities.PurchaseStatusHistory", b =>
                {
                    b.HasOne("PurchaseService.Domain.Entities.Purchase", "Purchase")
                        .WithMany("StatusHistory")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PurchaseService.Domain.ValueObjects.PurchaseStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PurchaseStatusHistoryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Reason")
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Reason");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Status");

                            b1.HasKey("PurchaseStatusHistoryId");

                            b1.ToTable("PurchaseStatusHistories");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseStatusHistoryId");
                        });

                    b.Navigation("Purchase");

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("PurchaseService.Domain.Entities.Purchase", b =>
                {
                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
